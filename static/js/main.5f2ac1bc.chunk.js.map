{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/getMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAdd","useState","query","setQuery","inputError","setInputError","movieFound","setMovieFound","clearState","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","input","value","onChange","target","trimLeft","error_message","help","onClick","fetch","then","response","json","getMovie","result","Response","Title","Plot","Poster","imdbID","App","data","setMovies","newMovie","some","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f2ac1bc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  imdbUrl: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/getMovie';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [movieFound, setMovieFound] = useState(null);\n\n  const clearState = () => {\n    setQuery('');\n    setMovieFound(null);\n    setInputError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': inputError,\n              })}\n              value={query}\n              onChange={({ target }) => {\n                setQuery(target.value.trimLeft());\n                setInputError(false);\n              }}\n            />\n          </div>\n\n          <p className={classNames({\n            error_message: !inputError,\n            help: true,\n            'is-danger': true,\n          })}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={() => {\n                if (!query) {\n                  return;\n                }\n\n                getMovie(query)\n                  .then((result) => {\n                    if (result.Response === 'False') {\n                      clearState();\n                      setInputError(true);\n\n                      return;\n                    }\n\n                    setMovieFound({\n                      title: result.Title,\n                      description: result.Plot,\n                      imgUrl: result.Poster,\n                      imdbId: result.imdbID,\n                    });\n                  });\n              }\n\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (!movieFound) {\n                  return;\n                }\n\n                clearState();\n\n                onAdd(movieFound);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {!movieFound || (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movieFound} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","const MOVIE_URL = 'https://www.omdbapi.com';\nconst apikey = '?apikey=288929c0';\n\nexport const getMovie = query => fetch(`${MOVIE_URL}/${apikey}&t=${query}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (movies.some(item => item.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}